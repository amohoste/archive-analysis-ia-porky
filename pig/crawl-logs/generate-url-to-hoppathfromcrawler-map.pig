/*
 * Copyright 2013 Internet Archive
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. 
 */

/* Input: A mapping of the crawled URLs to unique integers IDs (crawllogid.map)
 * Input: A mapping of the crawllogid to the complete hoppath from the crawler (generated by Giraph)
 * Output: A mapping of the url (SURT) to the original URL(crawled URL from crawl.log) and the complete hoppath from the crawler
 */

%default I_CRAWLLOG_ID_MAP_DIR '/search/nara/congress112th/analysis/crawllogid.map';
%default I_CRAWLLOGID_HOPPATHFROMCRAWLER_DIR '/search/nara/congress112th/analysis/crawllogid.hoppathfromcrawler';
%default O_URL_CRAWLLOGURL_CRAWLLOGID_HOPPATHFROMCRAWLER_DIR '/search/nara/congress112th/analysis/url.crawllogurl-crawllogid-hoppathfromcrawler';

--CDH4
--REGISTER lib/ia-web-commons-jar-with-dependencies-CDH4.jar;

--CDH3
REGISTER lib/ia-web-commons-jar-with-dependencies-CDH3.jar;

REGISTER lib/pigtools.jar;
DEFINE SURTURL pigtools.SurtUrlKey();

CrawlLogIdMap = LOAD '$I_CRAWLLOG_ID_MAP_DIR' as (crawllogid:long, crawllogurl:chararray);
CrawlLogIdCrawlerHoppath = LOAD '$I_CRAWLLOGID_HOPPATHFROMCRAWLER_DIR' as (crawllogid:long, hoppathfromcrawler:chararray);

Lines = FOREACH CrawlLogIdMap GENERATE SURTURL(crawllogurl) as url, crawllogurl, crawllogid;

--to ensure only 1-1 mapping
LinesGrp = GROUP Lines BY url;
UrlInfo = FOREACH LinesGrp {
		Parts = LIMIT Lines 1;
		GENERATE group as url, FLATTEN(Parts.crawllogurl) as crawllogurl, FLATTEN(Parts.crawllogid) as crawllogid;
	   };

Joined = JOIN UrlInfo BY crawllogid, CrawlLogIdCrawlerHoppath BY crawllogid;
Joined = FOREACH Joined GENERATE UrlInfo::url as url, UrlInfo::crawllogurl as crawllogurl, UrlInfo::crawllogid as crawllogid, CrawlLogIdCrawlerHoppath::hoppathfromcrawler as hoppathfromcrawler;

STORE Joined into '$O_URL_CRAWLLOGURL_CRAWLLOGID_HOPPATHFROMCRAWLER_DIR';
